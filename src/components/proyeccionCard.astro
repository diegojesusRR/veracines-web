---
import Action from "./Action.astro";
const { proyecciones, pelicula, cine, entradas } = Astro.props;

const DIASSEMANA = ['Domingo', 'Lunes', 'Martes', 'Mi√©rcoles', 'Jueves', 'Viernes', 'S√°bado'];
const MESES = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];

const diasProyeccion = [...new Set(proyecciones.map(proyeccion => {

    const anio = proyeccion.fecha.getFullYear();
    const mes = proyeccion.fecha.getMonth();
    const dia = proyeccion.fecha.getDate();
    return + `${anio}${mes.toString().padStart(2, '0')}${dia.toString().padStart(2, '0')}`
}))];

const mesesProyeccion = [...new Set(proyecciones.map(proyeccion => proyeccion.fecha.getMonth()))];

const entradasLink = entradas?.espanol ?? '';
const entradasVoseLink = entradas?.vose ?? '';

---
<div class="p-4 m-4 grid grid-cols-1 md:grid-cols-3 gap-4 border-2 align-middle bg-white bg-opacity-90 rounded-2xl shadow-xl relative transition-transform md:hover:scale-105 md:[direction:rtl]">
    <!-- T√≠tulo -->
    <div class="flex flex-col justify-between md:col-span-3">
        <h3 class={`text-2xl text-white bg-${cine.color} text-center font-extrabold pb-2 pt-2 rounded-lg mb-2 px-2 shadow`}>
            {pelicula.nombre}
        </h3>
    </div>

    <!-- Imagen y edad recomendada -->
    <div class="flex flex-col items-center justify-center rounded-xl bg-gray-50 bg-opacity-80 p-2 md:col-span-1">
        <img class={`w-full max-w-[180px] border-4 border-${cine.color} rounded-xl shadow-md`} src={`/img/peliculas/${pelicula.image}`} alt={`Imagen de la pel√≠cula: ${pelicula.nombre}`} loading="lazy" />
        <p class={`text-center text-xs font-bold w-full text-white p-2 bg-${cine.color} mt-2 rounded-lg shadow`}>
            {pelicula.edadRedomendada}
        </p>
    </div>
    <!-- Contenido principal -->
    <div class="justify-between md:col-span-2 items-center text-center">
        <div class="gap-4 items-center justify-center w-full">
            <div class="justify-center items-center">
                <p class={`text-${cine.color} font-bold underline mb-2`}>Proyecciones - {mesesProyeccion.map(x => MESES[x]).join(' y ')}</p>
                <ul class={`text-${cine.color} list-none list-inside space-y-1`}>
                    {diasProyeccion.sort().map(diaProyeccion => {
                        const proyeccionesDia = proyecciones.filter(proyeccion => {

                            const anio = proyeccion.fecha.getFullYear();
                            const mes = proyeccion.fecha.getMonth();
                            const dia = proyeccion.fecha.getDate();

                            return +`${anio}${mes.toString().padStart(2, '0')}${dia.toString().padStart(2, '0')}` == diaProyeccion;

                        });
                        const ultimaProyeccion = proyeccionesDia.length > 1 && proyeccionesDia.pop();
                        return (
                                <li class="flex items-center gap-2 justify-center">
                                    <span class="font-semibold">{DIASSEMANA[proyeccionesDia[0].fecha.getDay()]} {proyeccionesDia[0].fecha.getDate()}</span>
                                    <span>-</span>
                                    <span>
                                {proyeccionesDia.map(proyeccion => `${proyeccion.hora}h${proyeccion.vose ? ' (VOSE)' : ''}`).join(', ')}
                                        {ultimaProyeccion && ` y ${ultimaProyeccion.hora}h${ultimaProyeccion.vose ? ' (VOSE)' : ''}`}
                            </span>
                                </li>
                        );
                    })}
                </ul>
            </div>
            <div class="flex flex-col justify-center items-center gap-2 min-w-[180px]">
                { entradasLink && proyecciones[proyecciones.length-1].fecha >= new Date() && (
                        <Action as="a" class={`w-full sm:text-xs my-1 bg-${cine.color} text-white font-bold py-2 px-4 rounded-lg shadow hover:bg-opacity-90 transition`} aria-label={`Enlace a los tickets de ${cine.nombre} para la pel√≠cula ${pelicula.nombre}`} href={entradasLink} color={cine.color} target="_blank">
                            üéüÔ∏è Comprar entradas
                        </Action>
                )}
                { entradasVoseLink && proyecciones[proyecciones.length-1].fecha >= new Date() && (
                        <Action as="a" class={`w-full sm:text-xs bg-gray-800 text-white font-bold py-2 px-4 rounded-lg shadow hover:bg-opacity-90 transition`} aria-label={`Enlace a la cartelera de ${cine.nombre} para la pel√≠cula ${pelicula.nombre} en VOSE`} href={entradasVoseLink} color={cine.color} target="_blank">
                            üéüÔ∏è Entradas VOSE
                        </Action>
                )}
            </div>
        </div>
        <div class="relative flex h-2 w-full flex-col items-center my-4">
            <div class="absolute w-full items-center justify-between">
                <div class="h-[2px] w-full rounded-l-[30%] border-t-0"
                     style="background:linear-gradient(to right, transparent 2%, var(--color-primary) 15%, var(--color-primary) 83%, transparent 98%)">
                </div>
            </div>
        </div>
        <!-- Descripci√≥n -->
        <p class={`text-center text-gray-700 line-clamp-4 mb-2`}>{pelicula.descripcion}</p>
        <!-- Bot√≥n Leer m√°s -->
        <Action as="a" href={`https://www.veracines.es/peliculas/${pelicula.id}`} class={`block w-full text-center text-base mt-2 mb-2 font-bold underline bg-${cine.color} text-white py-2 px-4 rounded-lg hover:bg-opacity-80 transition`} color={cine.color} target="_blank">
            Leer m√°s
        </Action>
    </div>
</div>