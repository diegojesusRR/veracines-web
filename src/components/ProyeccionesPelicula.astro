---
import {GRUPOSPROYECCIONES} from "../consts/proyecciones";
import {GrupoProyeccion} from "../types/Proyeccion";

const { pelicula, cine } = Astro.props;

const DIASSEMANA = ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sabado'];

const grupoProyeccion: GrupoProyeccion[] = GRUPOSPROYECCIONES.filter(grupo => grupo.cine.url == cine.url && pelicula.id === grupo.pelicula.id && grupo.proyecciones[0].fecha >= new Date());
const proyecciones = grupoProyeccion[0]?.proyecciones;
const diasProyeccion = [...new Set(proyecciones?.map(proyeccion => `${proyeccion.fecha.getFullYear()}${proyeccion.fecha.getMonth()}${proyeccion.fecha.getDate()}`))].sort();

---

{
    proyecciones && proyecciones.length > 0 && <div class="flex flex-col align-left text-center mb-5 justify-center">
        <h3 class=`flex-1 text-${cine.color} font-bold underline`>Proyecciones {cine.corto}</h3>
        <ul class=`flex-2 text-${cine.color} list-none list-inside`>
            {diasProyeccion.sort().map(dia => {
                const proyeccionesDia = proyecciones.filter(proyeccion => `${proyeccion.fecha.getFullYear()}${proyeccion.fecha.getMonth()}${proyeccion.fecha.getDate()}` === dia);

                const ultimaProyeccion = proyeccionesDia.length>1 && proyeccionesDia.pop();
                const diaText = `${DIASSEMANA[proyeccionesDia[0].fecha.getDay()]} ${proyeccionesDia[0].fecha.getDate()}`;
                return (<li>
                    <span>{diaText}</span>
                    <span> - {proyeccionesDia.map(proyeccion => `${proyeccion.hora} ${proyeccion.vose ? ' (VOSE)' : ''}`).join(', ')}{ultimaProyeccion && ` y ${ultimaProyeccion.hora} ${ultimaProyeccion.vose ? ' (VOSE)' : ''}`}</span>
                </li>)
            })}
        </ul>
    </div>
    }